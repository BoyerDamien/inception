user www;

# set worker processes based on your CPU cores, nginx does not benefit from setting more than that
worker_processes auto; #some last versions calculate it automatically

# only log critical errors
error_log /var/log/nginx/error.log crit;

events {
# multiplexing
# optimized to serve many clients with each thread
	use epoll;

# accept as many connections as possible, may flood worker connections if set too low -- for testing environment
	multi_accept on;
}

http {
	include /etc/nginx/mime.types;

# Limit file upload size
	client_max_body_size 512M;

# to boost I/O on HDD we can disable access logs
	access_log off;

# copies data between one FD and other from within the kernel
# faster than read() + write()
	sendfile on;

# send headers in one piece, it is better than sending them one by one
	tcp_nopush on;

# don't buffer data sent, good for small data bursts in real time
	tcp_nodelay on;

# allow the server to close connection on non responding client, this will free up memory
	reset_timedout_connection on;

# if client stop responding, free up memory -- default 60
	send_timeout 60;

# server will close connection after this time -- default 75
	keepalive_timeout 30;

# number of requests client can make over keep-alive -- for testing environment
	keepalive_requests 1000;

	upstream php {
		server wordpress:9000;
	}

	gzip_static on;
	gzip_proxied any;

	server {
		listen 443 ssl;
		listen [::]:443 ssl;

		ssl_certificate /etc/ssl/certs/inception.crt;
		ssl_certificate_key /etc/ssl/private/inception.key;
		ssl_protocols TLSv1.2 TLSv1.3;

		root /var/www/wordpress;

		index index.php;

		location = /favicon.ico {
			log_not_found off;
			access_log off;
		}

		location / {
			try_files     $uri $uri/ /index.php?$args;
		}

		location = /robots.txt {
			allow                    all;
			log_not_found off;
			access_log    off;
		}

		location ~ \.php$ {
			fastcgi_pass php;
			fastcgi_index index.php;
			include fastcgi.conf;
		}
		location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
			expires max;
			log_not_found off;
		}
	}
}
